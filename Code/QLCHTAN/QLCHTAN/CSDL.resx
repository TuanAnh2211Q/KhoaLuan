<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MnEsfJ5arQAAAABJRU5ErkJggg==
</value>
  </data>
</root>