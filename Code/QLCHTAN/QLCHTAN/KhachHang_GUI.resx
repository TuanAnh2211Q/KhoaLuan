<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SDT.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="matKhau.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tenKhachHang.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Phai.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="diaChi.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Email.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ghiChu.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="idKhachHang.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAADXFJREFUeF7t
        mwl0lNUVx5kkk2QmM5OQPQTIZCHBhGwkYAiYhQAqBkxCgCwkLBVIDBKUJTWEJWwBAREEFdkqIILiwsGl
        7p4AYkXRKtb2VD3W1tZq9bRurQvc3v/78r5MMt9MJobYoYd7zu/km++9782797133333m/S5LJelx3I1
        czdzhvkb82/ma+YD5jSzjZnImJn/G7GCvBkzfHU63bd8TS4Ao2xhBjKXtCxlvvf00n81pnTeJykjrqX4
        1FGUmVdCOYWzaHRxLeUX19Co8dMpI7eIrAlDydI3xNYQ3zENjAdz6YmHh+cXPOpkHZxBbACXKCi5kdJG
        FVJwhNXWEC8yAcylI2NL6xqyr6m6kH11paaiXXHVdTNpcHouefsapRFeYdzeN2CqPq73Mfx9dEmtpmLd
        AUsjbdQE8jWYpBGexJe4s9Qz5MMdxlTWUkqCKR42YJBmmS2YQWkjC8lL7yONMA1f5I5iZP7BiA5rKWML
        6oGR11ZrlkvgJIcXTKHYpCvlM58w3ozbyUyG/IPCNRXpDOoCrHOtcluyr5kmjGA0B8jnrmfcTo4wdEVG
        vqYSnUFdYPCz8HZYo1lHkjvhBmGAgfHp8rlDjNsJojles9M0legM6kr6Wa/QrCOBgWCAIcPHymfeYNxO
        RJQnRzO/aA5F8Yhl5k+yUwigLvDRe4m//WOTqWBSnWZd3IcBhuYUyee+YNxOELWR3P5ih2SJznIwRAlp
        OXbKoQw8urySjL7e4to/MJyyxpZ3qAekATI4gmx7DqGy28lHjHBYMIKPr5+qJPCzBHIYfBWNGFfBs2Ou
        ev/HJ1fTSxtvIGuY6uAoKHwgJWaMFlsg6solkJx1tazzHuN28hgjOo7gBdeDIoPoER7hASH+qnKdgQEu
        PLWGvn5sOTVMziGzQd3vVfgsIdq1JmTIew8xbie/YCggKIKi+FCD60WTRgnlvjveTIdvnUoV+akUGxFI
        Rh+9KB+ZGCXKbfn6sRV0YMlkKstNodSYcLUugibMIlwz1YzbiYkRgZCM2p5eO0NV7InV1dQ/2EKRQRY6
        3lzVQWlH5f9hwx1tKhdtYRbgL/Mpg6DLrQSRGc7vcE6yo/TurgWqggND29c4lJT3nZX/8MQqemNHxy2T
        +YpZz3gxbiO3MZ07Sv98eJmq4FVDrGLKy7/yvrPy8+wfPrxvkV27bcAIbiOIz+nYimn0zs568tZ7ik5+
        +chyO0W7Awzw3r5bRFtenh50bud84VTxmUFKzW0EnREG+Pj+BooINItOvr9voaZiroIl8ModNaKt0ACT
        aPtoU4U0ALZdt5ENjOyYyrMtMzUVcxU4wSONZXbttrGacRuBE8Sa/JhRO9lUnqepmKtgCdUXZdsqDf7C
        rGH0jNvKtYzYx20VmpKTTFmDB9B9i0o7+Adc719cKsrGD4tX7392pJESB4ZKxQvR8KUiGJ3PGHp+/SxV
        oaFx/dSRhFNDhIjtD9fyfrI1TNT9/vFV9GD79Ed84SwJEsPUMvczZ5nPGZxNcEDDrHyT2cvMZaKYn0WQ
        EqfsxIHCmUGpb4+tpN03F1NeSjR5erQrjevc5GjataCYvjm2Qhn9B5dSxqBIWaeJ6SzIP5YxrYzalguc
        Z5BlxrO9mm5HBvfPDLXMGqfOAglG+E/7FwtwbVsG59dYlis7jDVvYWxlDHOOEXUsBh1VjPKmXXP96NV1
        Fvp0V1/6/lCgANe/WWuhnbP9qCzbm8y+OtkuwMwYx/SaoKPnPXQ62rdwUgclHYHZsq22kPAMnmXGoqE2
        8WHuYS4wlNDPk/bU+NG3B/oSHQl0iW/29xWGigtXYpW2tvBKzpfpFbmJEQrhtIdloKU4+OrR5TRvYpZU
        HiDLLCWUeZkho7eONlcZ6QceYSh14XAgvdZioaYSA+Ul6oVh/Hx0ZOLRHhzpSflJelpRaqCzG/xVQ2B2
        bKg0kreXOhvwvjKIuWgCR5jLrGO+ZMQXWcP6UnNVAZ3dUUdfHG0S4HpZRX7nYzNi/s0MpiiU/y1D8RGe
        dG6ToggUP1xvokF8D2WuAIM8vNAknkUbL6+2ULBZNTi+A9/VI/FjbmE6xAQ95Ef8HRrtJdY0Ov7Hrf40
        LFZJp4GwYDNNHp9GdywvoSN3zqAXDs0T4HrLsmIq5TLUkfVHJnjRh9sDRFtvs0HjwlWnjLfUPzntPp4R
        YTHwCY6ikJHlFF2xgQwR8eJeeV4KVeanUnxksEh+mHy9xTVyBYgTUMcYmUjRlbdR6MgK8vBRXo1hWkvl
        W5stFGJROhwSaKKGmjF06ugCOv3IzU459fACWrvoOgoPsYhng3jkX1xhpvM8G5661UyBJnUmbGe6JdhO
        cBwWzslvwBCKm7mdMja+TRmbf0eZt/+eBhQvFY1H8b7/5l3zRFxvyxu8DOQS6F+4kFKbT1LsjK3Uh/2B
        kdeznPbPLTOT3lMxcO6VcWKUtZQdEh9BaYmRmmXP319Ho4bFiDZ89Do6wQZ9f1sA7WWHqm/3CXmMSwLl
        EWSQzsv7Qv8Ji1nhdylzyx86MHTjW+osiAoLoB11E+itu28SbOdrGAZlxgFJlL7+dUpZeYJ8Q5Q3xLdX
        G9VpL0dpauFQMaJaCuI+6sCZapUD1MGyQL1Qfw86u95fONI5BWpKDql3T6ZLwciTh7eBEuoO2CluS8rK
        VjL0S5BfYIexfxKlrjol6lrLW8Q9OC14ezgtueYx8o6UB64YAKDeyExlJoyI9xIGaG3usBSmME4FMf8F
        nSdvPfMO2imsBWYCloNfVKowGjBZ02ngpOWUsemcWs8UrbwF2lfrJ0b/Afb2+AxHpjXtW4/Mp8qiTAru
        2zEbbYvWknjuYJ36zCbeWmGEJRN95TPPMQ4FkZ5weP0nLumgZE9JXvqs6IC/USeCHIy+DFyWzhtnpwSA
        8ih3RnpSf81n4URRHhPmoc4CA8cafA8+zeHZYREjRgpOTkuRnwpmA9qu5PAWo4/wFp/hvR15+6AAZRR3
        tZRpljvj5EP1YjfB8w/U+wkjjElWk7CzGDvBPokYnQbN3a2pRE8IzioVX44wFwZoLDaIz1ML0zUVcHXN
        O6NoXIpoo2asjzDArUXqMoCDt5N8hgzhcZoK9BRTjDKd0REYIOcKxfkhyNHq/MUwwNrFhaKNKwcpznAv
        +x58ZhAi20kLQ+Gjb9BUoKd4mYLEl3++Rwl8Ynlt4vPRu2Zqdh7IJXDvuqma5V2xc+0U8XxMqOIHnm5U
        o0acaO1EnMHja/ZqKtBTsDOgfXnYQSCEz46CHjCt2LETDOb1XV0yjFofnK/5LDi4pUrUxQEKBji1SvE7
        DH7MaSd4OSm8tZYCPcXTqHy5NAA6hc/ODADlqoqHCWVRV4vqScM1n8USumeNMgOQL+hkgH8xdiJOd+kt
        r2sq0FP0/koeUC4BuQU+tMPxEnDG3W3KhQaZNMuf3l9La/iMgDpyCfy6fQn8lbETJCo0Q15TTIayNXa6
        3x0QEaL9M9wRGCA30bkT7IqunOThO6dT/UwlAzU8TnGC2IHwmXmVsROHBuijUxyWVpmrhGQrydDdc5Vt
        EIkOfMZxV0uBrnBmAIz+vo0VlJcVJ+rUtm2DDder2+C9jJ30qgGs5etEG8jzwQCYCfiMMNiVY29n7lo9
        WTzfeQmgrQPs/HavL6MAi2JkGQiNTlJzDXMYO+lVAyQ3PkP4jTGSnTIUllmfpXXaoTCOvyh3xvROThA+
        BaOPHQLlaii80ky+fEzme0jEhDN20nsG4LA6bfVpMscpP4xEQIJZcGSB4t0xilq7QfLg9ncOnUGYC+Vt
        t8Fju2YL5TE7LGZlusvD0C/bp/8LjKb0mgHSW14TyRBkkdAOMkHyOAwHhXs5w2PFurY1gC1dOb3juxXl
        92wop5Q2w6VbPYXyyBFGBCg6MA5/kNkrBsC2CuVByopWNSGCkcEseG9bgEhj4R7OBY6M4MgAWPNy2kP5
        /BGDRD2c/483mIQBcBbAPeZ1RsdoysU1AE97OfK2xFRvEW0hbYWXGzDCC8vbU2KYCUhv2SopwZKwPf7C
        2yPak9NejjzawnsCKI+/bW1DP2S0HcpFM0DGpnfEmu+svCRomPLjSKSu39nsLxKYyOEhjSXutyVFcaS1
        NQDATIDiyAzLUYcvkB4f+YZ7ZivrHjPAJhO0iXEqPTYAFE9fd0ZTaVuSm54XSVa0iXcCOKR8cGcAd7pj
        WjyUt8iSa1Jp/ZIJtJMPRIe2TueDUZk45S2YlSemu1QcpEZ5qtMef7EDtJWdZLp8S9Q9A/A1ssPIEmOd
        OxtxLZKWPE6+YbGiXcyEX92oTNkz6yy0odJAUSFq57skmkPdjdOUUZfT3mbkkQh16V9zhAFSV7badVYa
        QKusJyQ1PKGeEr29dMJZnWg2q4ocvMmPZhf4UGaMF1nZIHh9BqAwZsqcMT50aL5iOABvj6hP+hPmJSaY
        cUl+dgMA2bYEswF79slV7YboCgQ5eMZmq0PebyvTrV+c/E8NgBcmckkA5AvGpeipsdiX7uPl8WyTmU6v
        UUb5maVmkVmG0gVD9DLCk2CrG8F0W4QBLlEw4s8w+A/Vn/wDie7+KuPnAP9Wh5PbCQa/W8T/FICP2u7t
        YaqYCOayXJZuS58+/wXkM1nQt5oizAAAAABJRU5ErkJggg==
</value>
  </data>
</root>